- name: try to use tower to kick off the destroy
  block:
  - name: Kick off the destroy playbook from tower
    uri:
      url: https://{{ inventory_hostname }}/api/v2/job_templates/10/launch/
      validate_certs: no
      method: POST
      user: "admin"
      password: "{{ workshop.default_password }}"
      force_basic_auth: yes
      status_code: [201,202]
      body_format: json
      body: >
        { 
           "extra_vars": {
             "ec2_name_prefix": "{{ workshop.name }}",
             "student_total": {{ workshop.how_many_students|int }},
             "workshop_type": "{{ workshop.type }}",
             "redhat_username": "{{ redhat.svcuser| trim }}",
             "redhat_password": "{{ redhat.svcpass| trim }}",
             "workshop_dns_zone": "{{ workshop.dns_zone }}",
             "offline_token": "{{ redhat.offline_token | trim }}",
             "instance_loc": "ec2",
             "ec2_region": "{{ aws.region }}",
             "doubleup": "false",
             "admin_password": "{{ workshop.default_password }}",
             "attendance": "true",
             "controllerinstall": "true",
             "create_cluster": "false",
             "code_server": "true"
           }
        }
    delegate_to: localhost
    #when: workshop.towerinstall|bool == true
  
  - name: "Monitor the destruction job by polling the api every min for 6 mins. It usually takes about 4 minutes"
    uri:
      url: https://{{ inventory_hostname }}/api/v2/job_templates/10/jobs/
      validate_certs: no
      method: GET
      user: "admin"
      password: "{{ workshop.default_password }}"
      force_basic_auth: yes
      status_code: [200]
      body_format: json
    register: jobstatus
    retries: 6
    delay: 60
    until: jobstatus.json.status != 'running'
    delegate_to: localhost
    when: workshop.auto_launch|bool == true

  #- name: "Lets give it 5 mins to destory the workshop resources"
  #  pause:
  #    minutes: 5

  rescue:
  - name: "[rescue] run the teardown playbook from the cli"
    shell: |
      cd workshops/provisioner
      ansible-playbook -e @workshop-{{ workshop.name }}.yml teardown_lab.yml

- name: "remove the unneeded workshop-details file"
  file:
    path: "{{ playbook_dir }}/workshop-details"
    state: absent
