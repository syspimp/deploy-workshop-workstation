---
- name: entitlement block
  block:
  - name: "Fall back to RHSM, Check if we are registered"
    shell: "subscription-manager status"
    register: rhsm_reg
    become: yes
  when:
  - ansible_distribution_major_version == '8'

  rescue:
  - name: "[rescue] we will need to subscribe to the redat cdn."
    debug:
      msg: "subscribing to the redhat cdn"
      
  - name: "[rescue] subscribe to the cdn"
    shell: subscription-manager register --auto-attach --username "{{ redhat.cdnuser }}" --password "{{ redhat.cdnpass }}"
    become: yes

- name: "list the enabled repos"
  shell: yum repolist
  register: repolist

- name: "Enabling needed repos for rhel8"
  shell: "subscription-manager repos --enable={{ item }}"
  with_items: "{{ rh8_enabled_repos }}"
  when: item not in repolist.stdout
  become: true
  loop:
  - ansible-2.9-for-rhel-8-x86_64-rpms
  - rhel-8-for-x86_64-appstream-rpms
  - rhel-8-for-x86_64-baseos-rpms

- name: "list the rpms installed"
  shell: rpm -qa
  register: rpmlist

- name: "install rpms if needed"
  shell: yum -y install {{ item }}
  become: yes
  #when: item not in rpmlist.stdout
  loop: "{{ workshop_deps.rpms }}"

- name: "list the installed pip dependencies"
  shell: pip3 list
  become: yes
  register: piplist

- name: "install needed pip dependencies"
  shell: pip3 install {{ item }}
  become: yes
  when: item not in piplist.stdout
  loop: "{{ workshop_deps.pipmods }}"

- name: "install needed ansible collections"
  shell: ansible-galaxy collection install -p /usr/share/ansible/collections community.{{ item }}
  args:
    creates: "/usr/share/ansible/collections/ansible_collections/community/{{ item }}"
  become: yes
  loop:
  - general
  - aws

- name: "clone the github repo"
  shell: |
    git clone https://github.com/ansible/workshops
    cd workshops
    git checkout {{ workshop_revision }}
  args:
    creates: /home/{{ aws.user }}/workshops

- name: "place the extra vars template"
  template:
    src: workshop.yml.j2
    dest: "/home/{{ aws.user }}/workshops/provisioner/workshop-{{ workshop.name }}.yml"

- name: "create aws directory to store creds"
  file:
    path: /home/{{ aws.user }}/.aws
    state: directory

- name: "copy the aws credential template"
  template:
    src: aws-credentials.j2
    dest: /home/{{ aws.user }}/.aws/credentials

- name: "copy up the entitlement manifest"
  copy:
    src: manifest.zip
    dest: /home/{{ aws.user }}/workshops/provisioner/manifest.zip

- name: "Updating MOTD"
  template: 
    src: motd.j2
    dest: /etc/motd 
    owner: root 
    group: root 
    mode: 0644
  become: true

- name: "Put the role in the MOTD"
  shell: |
    cat /etc/ansible/facts.d/awsroles.fact >> /etc/motd
  become: true

- name: "Fix permissions in /home/{{ aws.user }}"
  shell: |
    chown -r {{ aws.user }}.{{ aws.user }} /home/{{ aws.user }}
    restorecon -r /home/{{ aws.user }}
  become: true

- name: "Finished! CLI instructions"
  debug:
    msg: "The workstation inventory is in ./workstation-inventory. Your sshkey is keys/key.ppk. ssh -i keys/key.ppk {{ aws.user }}@{{ inventory_hostname }}, cd to /home/{{ aws.user }}/workshops/provisioner, and execute ansible-playbook -e @workshop-{{ workshop.name }}.yml provision_lab.yml to launch your ansible workshop."

- name: "Install Tower to deploy from GUI, if desired"
  include: "tower.yml"
  when: workshop.towerinstall|bool == true

