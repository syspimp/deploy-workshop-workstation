---
- name: "upgrade boto3 for awx user for workshop deployments"
  shell: |
    #source /var/lib/awx/venv/awx/bin/activate
    #umask 0022
    pip3 install --upgrade boto3 || python -m pip install --user --upgrade boto3 || true
    #deactivate
    touch /opt/.tower-setup2
  become: yes
  args:
    creates: /opt/.tower-setup2

- name: "list the installed pip dependencies for the awx user"
  shell: |
    #source /var/lib/awx/venv/awx/bin/activate
    #umask 0022
    pip3 list
  ignore_errors: yes
  register: piplist

- name: "install needed pip dependencies for awx user"
  shell: |
    #source /var/lib/awx/venv/awx/bin/activate
    #umask 0022
    pip3 install --user {{ item }}
  when: item not in piplist.stdout
  ignore_errors: yes
  loop: "{{ workshop_deps.pipmods }}"

- name: "install needed ansible collections for awx user"
  shell: |
    source /var/lib/awx/venv/awx/bin/activate
    umask 0022
    ansible-galaxy collection install community.{{ item }}
  args:
    creates: "/var/lib/awx/.ansible/collections/ansible_collections/community/{{ item }}"
  loop:
  - general
  - aws

- name: "clone the workshop github repo to /var/lib/awx/projects and build/install collections"
  shell: |
    source /var/lib/awx/venv/awx/bin/activate
    umask 0022
    cd /var/lib/awx/projects/
    git clone https://github.com/ansible/workshops
    chown -R awx.awx ./
    restorecon -rV /var/lib/awx/
    deactivate
  become: yes
  args:
    executable: /bin/bash
    creates: /var/lib/awx/projects/workshops

- name: "place your workshop extra vars template in /var/lib/awx/projects/workshops/provisioner/workshop-{{ workshop.name }}"
  template:
    src: workshop.yml.j2
    dest: "/var/lib/awx/projects/workshops/provisioner/workshop-{{ workshop.name }}"
  become: yes

- name: "create the tower backup to json objects script"
  template:
    src: "backup-tower-config-into-json.sh.j2"
    dest: "/home/{{ aws.user }}/backup-tower-config-into-json.sh"
    mode: 0755

- name: "copy some useful playbooks into the project"
  copy:
    src: "playbooks/"
    dest: "/var/lib/awx/projects/workshops/"
    mode: 0755
    owner: 'awx'
    group: 'awx'
  become: yes
  #loop:
  #- start-aws-vms
  #- stop-aws-vms
  #- launch-aws-vm

- name: "create the tower json workshop objects"
  template:
    src: "{{ item }}.json.j2"
    dest: "import-{{ item }}.json"
  become: yes
  loop:
  - projects
  - credentials
  - job_templates
  - inventory
  - inventory_sources

- name: "import the workshop objects"
  shell: |
    $(TOWER_USERNAME=admin TOWER_PASSWORD={{ tower_password }} /home/{{ aws.user }}/.local/bin/awx login -k -f human)
    /home/{{ aws.user }}/.local/bin/awx -k import < import-{{ item }}.json
  args:
    executable: /bin/bash
    creates: /opt/.tower-setup6
  loop:
  - projects
  - credentials
  - job_templates
  - inventory
  - inventory_sources

- name: "idempotency for workshop"
  shell: touch /opt/.tower-setup6
  become: yes

- name: "create the advanced tower objects"
  template:
    src: "towerobjects/{{ item }}.json.j2"
    dest: "tower-{{ item }}.json"
  become: yes
  loop:
  - notification_templates
  - organizations
  - projects
  - teams
  - users
  - workflow_job_templates
  - credentials
  - credential_types
  - job_templates
  - inventory
  - inventory_sources

- name: "import the workshop objects"
  shell: |
    $(TOWER_USERNAME=admin TOWER_PASSWORD={{ tower_password }} /home/{{ aws.user }}/.local/bin/awx login -k -f human)
    /home/{{ aws.user }}/.local/bin/awx -k import < tower-{{ item }}.json
  args:
    executable: /bin/bash
    creates: /opt/.tower-setup7
  loop:
  - notification_templates
  - organizations
  - projects
  - credential_types
  - credentials
  - inventory
  - inventory_sources
  - job_templates
  - teams
  - users
  - workflow_job_templates

- name: "Fix permissions in /var/lib/awx/projects"
  shell: |
    chown -r awx.awx /var/lib/awx/projects/*
    restorecon -r /var/lib/awx/projects/*
  become: true

- name: "idempotency for workshop"
  shell: touch /opt/.tower-setup7
  become: yes

- name: "Finished! Tower instructions"
  debug:
    msg: "Visit https://{{ inventory_hostname }}/ using user/pass admin/{{ workshop.default_password }}. There are two Job Templates, Deploy Workshop and Destroy Workshop pre-configured."

- name: "Finished! CLI instructions"
  debug:
    msg: "Your sshkey is keys/key.ppk. ssh -i keys/key.ppk {{ aws.user }}@{{ inventory_hostname }}, cd to /home/{{ aws.user }}/workshops/provisioner, and execute ansible-playbook -e @workshop-{{ workshop.name }}.yml provision_lab.yml to launch your ansible workshop."
